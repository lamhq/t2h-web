name: Deploy to Amazon ECS cluster

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [12.18.3]

    env:
      CI: true

    steps:
    - uses: actions/checkout@v2
    # use dict key for https://github.com/nektos/act/issues/104
    - name: Use Node.js ${{ matrix['node-version'] }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix['node-version'] }}

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-southeast-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
      with:
        registries: 885729565715

    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps['login-ecr'].outputs.registry }}
        ECR_REPOSITORY: t2hfe
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker build -t t2hfe:latest .
        docker tag t2hfe:latest $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        docker tag t2hfe:latest $ECR_REGISTRY/$ECR_REPOSITORY:latest
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest
        echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"

    - name: Fill in the new image ID in the Amazon ECS task definition
      id: task-def
      uses: aws-actions/amazon-ecs-render-task-definition@v1
      with:
        task-definition: task-definition.dev.json
        container-name: frontend
        image: ${{ steps['build-image'].outputs.image }}

    - name: Deploy Amazon ECS task definition
      uses: aws-actions/amazon-ecs-deploy-task-definition@v1
      with:
        task-definition: ${{ steps['task-def'].outputs['task-definition'] }}
        service: truck2hand-dev-frontend
        cluster: truck2hand-dev-ecs-cluster

    - name: Logout of Amazon ECR
      if: always()
      run: docker logout ${{ steps['login-ecr'].outputs.registry }}
